---
// src/components/CodeInterpreter.astro
---

<aside class="w-1/4 bg-gray-800 text-white p-4">
  <h2 class="text-lg font-semibold mb-4">Code Interpreter</h2>
  <div class="mb-4">
    <input
      type="text"
      id="storeId"
      placeholder="Store ID"
      class="w-full p-2 mb-2 text-black"
    />
    <input
      type="text"
      id="publicKey"
      placeholder="Public Key"
      class="w-full p-2 mb-2 text-black"
    />
    <button
      id="initializeSwellBtn"
      class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"
    >
      Initialize Swell
    </button>
  </div>
  <div class="mb-4">
    <button
      id="fetchProductsBtn"
      class="bg-green-500 hover:bg-green-700 text-white font-bold py-2 px-4 rounded"
    >
      Fetch Products
    </button>
  </div>
  <div class="bg-gray-900 p-4 rounded-md">
    <pre><code id="result" class="language-json"></code></pre>
  </div>
</aside>

<script>
  import swell from 'swell-js';

  // Initialize swell with placeholder values
  swell.init('placeholder-store-id', 'placeholder-public-key');

  const storeIdInput = document.getElementById('storeId');
  const publicKeyInput = document.getElementById('publicKey');
  const initializeSwellBtn = document.getElementById('initializeSwellBtn');
  const fetchProductsBtn = document.getElementById('fetchProductsBtn');
  const resultElement = document.getElementById('result');

  initializeSwellBtn.addEventListener('click', () => {
    const storeId = storeIdInput.value;
    const publicKey = publicKeyInput.value;
    swell.init(storeId, publicKey);
    resultElement.textContent = 'Swell initialized successfully';
  });

  fetchProductsBtn.addEventListener('click', async () => {
    try {
      const products = await swell.products.list({
        limit: 25,
        page: 1
      });
      resultElement.textContent = JSON.stringify(products, null, 2);
    } catch (error) {
      resultElement.textContent = `Error: ${error.message}`;
    }
  });
</script>
